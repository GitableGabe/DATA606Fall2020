# Quick plot using vectors. Step on make vector
Q1<-data.frame(prof_id = evals$prof_id,score = evals$score)
Q1
# Preferred option is to make a dataframe based on the vector above
Q1.1<-Q1 %>%
group_by(score) %>%
summarise(no_rows = length(score))
# Use ggplot(),geom_bar(),geom_text(),labs)(),scale_x_continous(), and theme() to edit plot
ggplot(data = Q1.1, aes(x=score, y=no_rows,fill=no_rows)) +
geom_bar(stat = "identity")+
geom_text(aes(label=no_rows),position = position_dodge(width = .1),vjust = -0.25)+
labs(title = 'Score Distribution', y="Count")+
scale_x_continuous(breaks = unique(Q1.1$score)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
Q3<-data.frame(cls_students = evals$cls_students, cls_percent_eval = evals$cls_perc_eval)
Q3
ggplot(data=Q3,mapping = aes(x=))
Q3<-data.frame(cls_students = evals$cls_students, cls_percent_eval = evals$cls_perc_eval)
Q3
ggplot(data=Q3,mapping = aes(x = cls_perc_eval))
View(Q3)
Q3<-data.frame(cls_students = evals$cls_students, cls_perc_eval = evals$cls_perc_eval)
Q3
ggplot(data=Q3,mapping = aes(x = cls_perc_eval))
Q3<-data.frame(cls_students = evals$cls_students, cls_perc_eval = evals$cls_perc_eval)
Q3
ggplot(data=Q3,mapping = aes(x = cls_perc_eval, y = cls_students))
Q3<-data.frame(cls_students = evals$cls_students, cls_perc_eval = evals$cls_perc_eval)
Q3
ggplot(data=Q3,mapping = aes(x = cls_perc_eval, y = cls_students))+
geom_point()
Q3<-data.frame(cls_students = evals$cls_students, cls_perc_eval = evals$cls_perc_eval)
Q3
ggplot(data=Q3,mapping = aes(x = cls_students, y = cls_perc_eval))+
geom_point()
Q3<-data.frame(cls_students = evals$cls_students, cls_perc_eval = evals$cls_perc_eval)
Q3
ggplot(data=Q3,mapping = aes(x = cls_students, y = cls_perc_eval))+
geom_line()
Q3<-data.frame(age = evals$age, bty_avg = evals$bty_avg)
Q3
ggplot(data=Q3,mapping = aes(x = bty_avg, y = age))+
geom_line()
Q3<-data.frame(age = evals$age, bty_avg = evals$bty_avg)
Q3
ggplot(data=Q3,mapping = aes(x = bty_avg, y = age))+
geom_point()
Q3<-data.frame(age = evals$age, bty_avg = evals$bty_avg)
Q3
ggplot(data=Q3,mapping = aes(x = age, y = bty_avg))+
geom_point()
plot(x=Q3$age,y=Q3$bty_avg)
Q3<-data.frame(age = evals$age, bty_avg = evals$bty_avg)
Q3
ggplot(data=Q3,mapping = aes(x = age, y = bty_avg))+
geom_point()
Q3<-data.frame(age = evals$age, bty_avg = evals$bty_avg)
Q3
ggplot(data=Q3,mapping = aes(x = age, y = bty_avg))+
geom_point()+
labs(title = 'Age vs. Beauty Scores', y="Beauty Scores (avg)")+
scale_x_continuous(breaks = unique(Q3$age)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
Q3<-data.frame(age = evals$age, bty_avg = evals$bty_avg)
Q3
ggplot(data=Q3,mapping = aes(x = age, y = bty_avg))+
geom_point()+
labs(title = 'Age vs. Beauty Scores',x='AGE', y="Beauty Scores (avg)")+
scale_x_continuous(breaks = unique(Q3$age)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Use ggplot(),geom_bar(),geom_text(),labs)(),scale_x_continous(), and theme() to edit plot
ggplot(data = Q1.1, aes(x=score, y=no_rows,fill=no_rows)) +
geom_bar(stat = "identity")+
geom_text(aes(label=no_rows),position = position_dodge(width = .1),vjust = -0.25)+
labs(title = 'Score Distribution', y="Count")+
scale_x_continuous(breaks = unique(Q1.1$score)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Use ggplot(),geom_bar(),geom_text(),labs)(),scale_x_continous(), and theme() to edit plot
ggplot(data = Q1.1, aes(x=score, y=no_rows,fill=no_rows)) +
geom_bar(stat = "identity")+
geom_text(aes(label=no_rows),position = position_dodge(width = .1),vjust = -0.25)+
labs(title = 'Score Distribution',x = 'Score', y="Count")+
scale_x_continuous(breaks = unique(Q1.1$score)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
Q3<-data.frame(age = evals$age, bty_avg = evals$bty_avg)
Q3
ggplot(data=Q3,mapping = aes(x = age, y = bty_avg))+
geom_point()+
labs(title = 'Age vs. Beauty Scores',x='Age', y="Beauty Scores (avg)")+
scale_x_continuous(breaks = unique(Q3$age)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Use ggplot(),geom_bar(),geom_text(),labs)(),scale_x_continous(), and theme() to edit plot
ggplot(data = Q1.1, aes(x=score, y=no_rows,fill=no_rows)) +
geom_bar(stat = "identity")+
geom_text(aes(label=no_rows),position = position_dodge(width = .1),vjust = -0.25)+
labs(title = 'Score Distribution',x = 'Score', y="Count")+
scale_x_continuous(breaks = unique(Q1.1$score)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
Q3<-data.frame(age = evals$age, bty_avg = evals$bty_avg)
Q3
ggplot(data=Q3,mapping = aes(x = age, y = bty_avg))+
geom_point()+
labs(title = 'Age vs. Beauty Scores',x='Age', y="Beauty Scores (avg)")+
scale_x_continuous(breaks = unique(Q3$age)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter()
boxplot(evals$gender, evals$bty_avg)+
labs(title = 'Age vs. Beauty Scores',x='Age', y="Beauty Scores (avg)")
boxplot(evals$gender, evals$bty_avg)+
labs(title = 'Age vs. Beauty Scores',x='Age', y="Beauty Scores (avg)")
boxplot(evals$gender, evals$bty_avg)+
text(y = evals$bty_avg[nrow(evals$bty_avg)])
boxplot(evals$gender, evals$bty_avg)+
text(y = evals$bty_avg[nrow(evals$bty_avg)])
boxplot(evals$age, evals$bty_avg)
boxplot(c(evals$age, evals$bty_avg))
boxplot(evals$age, evals$bty_avg)
boxplot(evals$age, evals$bty_avg, las = 2)
boxplot(evals$age, evals$bty_avg, las = 1)
boxplot(evals$age, evals$bty_avg, las = 3)
boxplot(evals$age, evals$bty_avg)
boxplot(evals$age, evals$bty_avg, ylab = 'age')
Q3<-data.frame(age = evals$age, bty_avg = evals$bty_avg)
Q3
ggplot(data=Q3,mapping = aes(x = bty_avg, y = age))+
geom_point()+
labs(title = 'Age vs. Beauty Scores',x='Age', y="Beauty Scores (avg)")+
scale_x_continuous(breaks = unique(Q3$age)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
Q3<-data.frame(age = evals$age, bty_avg = evals$bty_avg)
Q3
ggplot(data=Q3,mapping = aes(x = age, y = bty_avg))+
geom_point()+
labs(title = 'Age vs. Beauty Scores',x='Age', y="Beauty Scores (avg)")+
scale_x_continuous(breaks = unique(Q3$age)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
boxplot(evals$bty_avg, evals$age, ylab = 'age')
boxplot(evals$bty_avg, evals$age')
boxplot(evals$bty_avg, evals$age)
boxplot(evals$bty_avg, evals$age)
boxplot(evals$age, evals$bty_avg)
boxplot(evals$age, evals$bty_avg)
nrow(evals$bty_avg)
nrow(evals$bty_avg)
nrow(evals$bty_avg)
count(evals$bty_avg)
nrow(evals)
glimpse(evals)
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter()
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_point()
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter()
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm", formula = m_bty)
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(data = m_bty, method = "lm")
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter(m_bty) +
geom_smooth(method = "lm")
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter(data = m_bty) +
geom_smooth(method = "lm")
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")+
abline(m_bty)
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")+
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
abline(m_bty)+
geom_smooth(method = "lm")
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
abline(m_bty)
#geom_smooth(method = "lm")
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")
abline(m_bty)
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")
# abline(m_bty)
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")
abline(m_bty, col = 'red')
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")
abline(v = m_bty, col = 'red')
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")
abline(v = m_bty, col = "red")
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")
abline(v = m_bty, col = "red")
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score))
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot('Beauty Average' = evals$bty_avg~jitter(evals$score))
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score))+labs(x = "test")
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score))
xlab("test")
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score))
xlab("test")
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score))
xlab(test)
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),xlab = 'test')
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),xlab = 'test')
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),xlab = 'Scores',ylab = 'Beauty Score Average')
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),title = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average')
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),title = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average')
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),main = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average')
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),main = 'Beauty Score Trend',sub = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average')
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),main = 'Beauty Score Trend',sub = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average',col.sub = 'blue')
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),main = 'Beauty Score Trend',sub = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average',col.sub = 'purple')
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),main = 'Beauty Score Trend',sub = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average',col.sub = 'Dark Green')
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),main = 'Beauty Score Trend',sub = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average',col.sub = 'Dark Green', col.lab = 'blue')
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),main = 'Beauty Score Trend',sub = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average',col.sub = 'Dark Green', col.lab = 'blue', col='red')
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),main = 'Beauty Score Trend',sub = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average',col.sub = 'Dark Green', col.lab = 'blue', col='red',pch=18)
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),main = 'Beauty Score Trend',sub = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average',col.sub = 'Dark Green', col.lab = 'blue', col='blue',pch=18)
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),main = 'Beauty Score Trend',sub = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average',col.sub = 'Red', col.lab = 'blue', col='blue',pch=18)
abline(m_bty)
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),main = 'Beauty Score Trend',sub = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average',col.sub = 'Red', col.lab = 'blue', col='blue',pch=18)
abline(m_bty, col='red')
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),main = 'Beauty Score Trend',sub = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average',col.sub = 'Red', col.lab = 'blue', col='blue',pch=18)
abline(m_bty, col='red')
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")
plot_ss(x = evals$bty_avg, y = evals$score, showSquares = TRUE)
plot_ss(x = pf_expression_control, y = pf_score, data = 'hfi', showSquares = TRUE)
plot_ss(x = evals$bty_avg, y = evals$score, showSquares = TRUE)
plot_ss(x = evals$bty_avg, y = evals$score, showSquares = TRUE)
library(tidyverse)
library(openintro)
library(DATA606)
#library(GGally)
data(evals)
library(tidyverse)
library(openintro)
library(DATA606)
library(GGally)
data(evals)
hist(m_bty$residuals)
hist(m_bty$residuals,xlim = c(-4.0,4.0))
hist(m_bty$residuals,xlim = c(-3.0,4.0))
hist(m_bty$residuals,xlim = c(-2.2,2.2))
hist(m_bty$residuals)
hist(m_bty$residuals,xlim = c(-2.2,2.2))
hist(m_bty$residuals,xlim = c(-2,1.2))
hist(m_bty$residuals,xlim = c(-2,1.5))
hist(m_bty$residuals,xlim = c(-2,1))
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green')
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
lines(density(m_bty))
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
lines(density(m_bty$residuals))
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
lines(density(m_bty$residuals))
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
lines(density(m_bty$residuals),col='blue')
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
lines(density(m_bty$residuals,adjust = 2),col='blue')
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
curve(dnorm(m_bty, mean = mean(m_bty$residuals), sd = sd(m_bty$residuals)))
m<-mean(m_bty)
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
#curve(dnorm(m_bty, mean = mean(m_bty$residuals), sd = sd(m_bty$residuals)))
m<-mean(m_bty$residuals)
std<-sqrt(var(m_bty$residuals))
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
curve(dnorm(x,mean = m, sd = std))
m<-mean(m_bty$residuals)
std<-sqrt(var(m_bty$residuals))
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
curve((dnorm(x,mean = m, sd = std))
m<-mean(m_bty$residuals)
std<-sqrt(var(m_bty$residuals))
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
curve((dnorm(x,mean = m, sd = std))
m<-mean(m_bty$residuals)
std<-sqrt(var(m_bty$residuals))
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
curve((dnorm(x,mean = m, sd = std)))
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
# Chunk 1: global_options
knitr::opts_chunk$set(eval = TRUE, results = FALSE, fig.show = "hold", message = FALSE)
# Chunk 2: load-packages
library(tidyverse)
library(openintro)
library(DATA606)
library(GGally)
data(evals)
# Chunk 3
glimpse(evals)
# Chunk 4: help-evals
#?evals
# Chunk 5: step_1
# Quick plot using vectors. Step on make vector
Q1<-data.frame(prof_id = evals$prof_id,score = evals$score)
Q1
# Chunk 6: preferred
# Preferred option is to make a dataframe based on the vector above
Q1.1<-Q1 %>%
group_by(score) %>%
summarise(no_rows = length(score))
# Chunk 7: preferred_plot
# Use ggplot(),geom_bar(),geom_text(),labs)(),scale_x_continous(), and theme() to edit plot
ggplot(data = Q1.1, aes(x=score, y=no_rows,fill=no_rows)) +
geom_bar(stat = "identity")+
geom_text(aes(label=no_rows),position = position_dodge(width = .1),vjust = -0.25)+
labs(title = 'Score Distribution',x = 'Score', y="Count")+
scale_x_continuous(breaks = unique(Q1.1$score)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Chunk 8
# Option 1 make bar chart with count
Q1_alt<-evals$score
qplot(Q1_alt)+geom_text(stat = 'count',aes(label =..count.., vjust = -0.2), color="blue")
# Chunk 9: hist_evals_count
# option 2 for plot
require( lattice )
histogram( ~as.factor(Q1_alt))
# Chunk 10: plot_basic_evals_count
#option 3
plot( as.factor(Q1_alt),
main="College Professor Scores",
ylab='count',
col='blue')
# Chunk 11: Q3_scatter
Q3<-data.frame(age = evals$age, bty_avg = evals$bty_avg)
Q3
ggplot(data=Q3,mapping = aes(x = age, y = bty_avg))+
geom_point()+
labs(title = 'Age vs. Beauty Scores',x='Age', y="Beauty Scores (avg)")+
scale_x_continuous(breaks = unique(Q3$age)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Chunk 12
boxplot(evals$age, evals$bty_avg)
# Chunk 13: scatter-score-bty_avg
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_point()
# Chunk 14: scatter-score-bty_avg-jitter
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter()
# Chunk 15
m_bty <- lm(evals$score~evals$bty_avg)
m_bty
plot(evals$bty_avg~jitter(evals$score),main = 'Beauty Score Trend',sub = 'Linear Model', xlab = 'Scores',ylab = 'Beauty Score Average',col.sub = 'Red', col.lab = 'blue', col='blue',pch=18)
abline(m_bty, col='red')
# Chunk 16: scatter-score-bty_avg-line-se
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")
# Chunk 17: scatter-score-bty_avg-line
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm", se = FALSE)
mydensity<-density(m_bty$residuals)
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
mydensity<-density(m_bty$residuals)
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
lines(mydensity)
mydensity<-density(m_bty$residuals)
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
lines(mydensity)
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
plot_ss(x = evals$bty_avg, y = evals$score, showSquares = TRUE)
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
ggplot(data = m1, aes(sample = .resid)) +
stat_qq()
qqnorm(m_bty$residuals)
qqline(m_bty$residuals)
plot_ss(x = evals$bty_avg, y = evals$score, showSquares = TRUE)
hist(m_bty$residuals,xlim = c(-2,1), col = 'sea green',xlab = "Residuals")
qqnorm(m_bty_gen$residuals)
qqline(m_bty_gen$residuals)
plot(m_bty_gen$residuals ~ evals$bty_avg,xlab = bty_avg)
abline(h = 0, lty = 3)
qqnorm(m_bty_gen$residuals)
qqline(m_bty_gen$residuals)
plot(m_bty_gen$residuals ~ evals$bty_avg)
labs(x = bty_avg)
abline(h = 0, lty = 3)
qqnorm(m_bty_gen$residuals)
qqline(m_bty_gen$residuals)
plot(m_bty_gen$residuals ~ evals$bty_avg, main = "TEST")
abline(h = 0, lty = 3)
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
qqnorm(m_bty_gen$residuals)
qqline(m_bty_gen$residuals)
plot(m_bty_gen$residuals ~ evals$bty_avg, main = "TEST")
abline(h = 0, lty = 3)
qqnorm(m_bty_gen$residuals)
qqline(m_bty_gen$residuals)
plot(m_bty_gen$residuals ~ evals$bty_avg, main = "m_bty_gen",xlab = "Residuals")
abline(h = 0, lty = 3)
qqnorm(m_bty_gen$residuals)
qqline(m_bty_gen$residuals)
plot(m_bty_gen$residuals ~ evals$bty_avg, main = "m_bty_gen",ylab = "Residuals")
abline(h = 0, lty = 3)
qqnorm(m_bty_gen$residuals)
qqline(m_bty_gen$residuals)
plot(m_bty_gen$residuals ~ evals$bty_avg, main = "m_bty_gen",xlab = "Average",ylab = "Residuals")
abline(h = 0, lty = 3)
qqnorm(m_bty_gen$residuals)
qqline(m_bty_gen$residuals)
plot(m_bty_gen$residuals ~ evals$bty_avg, main = "m_bty_gen",xlab = "Average",ylab = "Residuals", col = "green")
abline(h = 0, lty = 3)
qqnorm(m_bty_gen$residuals)
qqline(m_bty_gen$residuals)
plot(m_bty_gen$residuals ~ evals$bty_avg, main = "m_bty_gen",xlab = "Average",ylab = "Residuals", col = "green", pch = 18)
abline(h = 0, lty = 3)
qqnorm(m_bty_gen$residuals)
qqline(m_bty_gen$residuals)
plot(m_bty_gen$residuals ~ evals$bty_avg, main = "m_bty_gen",xlab = "Average",ylab = "Residuals", col = "Dark green", pch = 18)
abline(h = 0, lty = 3)
ggplot(evals,aes(y=m_bty_gen$residuals,x=evals$gender))+geom_boxplot()+geom_point()+
labs(title = 'm_bty Variability',x = 'Gender', y="Residuals")
